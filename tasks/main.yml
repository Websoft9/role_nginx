- import_tasks: RedHat.yml
  when: ansible_os_family == 'RedHat'

- import_tasks: Debian.yml
  when: ansible_os_family == 'Debian'

- name: Configure Nginx
  copy:
    src: nginx.conf
    dest: /etc/nginx/

- name: Create a Nginx Log symbolic link
  file:
    src: '{{item.src}}'
    dest: '{{item.dest}}'
    state: link
  with_items:
    - {src: /etc/nginx/conf.d,dest: /data/config/nginx}  
    - {src: /var/log/nginx,dest: /data/logs/nginx}  

- name: Change Directory Owner
  file:
    path: /data/{{item}}
    state: directory
    owner: www-data
    group: www-data
  with_items:
    - wwwroot
    - cert
  when: ansible_distribution == 'Ubuntu'

- name: Change Directory Owner
  file:
    path: /data/{{item}}
    state: directory
    owner: nginx
    group: nginx
  with_items:
    - wwwroot
    - cert
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Amazon'

- name: Set Reverse proxy
  template:
    src: reverse_proxy.jinja2
    dest: /etc/nginx/conf.d/default.conf
  when: nginx_reverse_proxy_port

- name: create Directory extra
  file:
    path: /etc/nginx/extra
    state: directory

# add new user and password setfile
- block: 
  - name: Copy htpasswd.conf
    copy:
      src: htpasswd.conf
      dest: /etc/nginx/.htpasswd
  - name: Insert ngnix service  password authority 
    blockinfile:
      path: /etc/nginx/conf.d/default.conf
      insertafter: "proxy_temp_file_write_size 64k;"
      block: |
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    when: nginx_htpasswd
    
- name: Start Nginx
  service:
    name: nginx
    state: restarted
    enabled: yes

# display version and service state of components
- name: Get Nginx version
  shell: sudo sh -c "nginx -v 2>> /data/logs/install_version.txt"

- name: Check Nginx Service
  shell: systemctl status nginx | grep Active*
  register: check_nginx_service
  notify: check_nginx_service
